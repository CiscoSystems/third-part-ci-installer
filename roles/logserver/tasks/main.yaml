---
- name: Install apache2 mod wsgi package
  package:
    name: libapache2-mod-wsgi

- name: Create group account.
  become: yes
  group:
    name: "loguser"

- name: Create user account.
  become: yes
  user:
    createhome: yes
    home: "/var/lib/loguser"
    group: "loguser"
    name: "loguser"

- name: Ensure location for logs exists
  file:
    path: '/srv/static'
    state: directory
    owner: loguser
    group: loguser

- name: Ensure location for logs exists
  file:
    path: '/srv/static/logs'
    state: directory
    owner: loguser
    group: loguser

- name: Setup robots.txt
  copy:
    dest: /srv/static/logs/robots.txt
    content: |
      User-agent: *
      Disallow: /

- name: Install packages required for keyring
  package:
    name: "{{ item }}"
  with_items:
    - build-essential
    - python-dev
    - libdbus-1-dev
    - libdbus-glib-1-dev
    - libffi-dev
    - libssl-dev
    - python-pip

- name: Install keyring
  pip:
    name: keyring
    executable: pip2

- name: Download os-loganalyze
  git:
    repo: https://git.openstack.org/openstack-infra/os-loganalyze
    dest: /opt/os-loganalyze

- name: Install os-loganalyze
  pip:
    name: file:///opt/os-loganalyze
    executable: pip2

- name: Create os-loganalyze config dir
  file:
    path: /etc/os_loganalyze
    state: directory

- name: Create WSGI config for loganalyze
  copy:
    dest: /etc/os_loganalyze/wsgi.conf
    content: |
      [general]
      filter = SevFilter
      view = HTMLView
      file_conditions = /etc/os_loganalyze/file_conditions.yaml
      generate_folder_index = true

- name: Create loganalyze file conditions file
  copy:
    dest: /etc/os_loganalyze/file_conditions.yaml
    content: |
      conditions:
       - filename_pattern: ^.*\.txt(\.gz)?$
         filter: SevFilter
         view: HTMLView
       - filename_pattern: ^.*\.log(\.gz)?$
         filter: SevFilter
         view: HTMLView
       - filename_pattern: ^.*console\.html(\.gz)?$
         filter: SevFilter
         view: HTMLView
       - filename_pattern: ^.*$
         filter: NoFilter
         view: PassthroughView

- name: Upload log maintenance script
  copy:
    dest: /usr/local/sbin/log_archive_maintenance.sh
    content: |
      #!/bin/sh
      sleep $((RANDOM%600)) && \
      flock -n /var/run/gziplogs.lock \
      find -O3 /srv/static/logs/ -depth -not -name robots.txt -not -name lost+found \
              -not -wholename /srv/static/logs/help/\* \( \
          \( -type f -mmin +10 -not -name \*\[.-\]gz -not -name \*\[._-\]\[zZ\] \
              \( -name \*.txt -or -name \*.html -or -name tmp\* \) \
              -exec gzip \{\} \; \) \
          -o \( -type f -mtime +30 -execdir rm \{\} \; \) \
          -o \( -type d -empty -mtime +1 -execdir rmdir {} \; \) \)

- name: Setup cron task for maintenance script
  cron:
    name: gziprmlogs
    minute: 0
    hour: 7
    weekday: 6
    job: bash /usr/local/sbin/log_archive_maintenance.sh

- name: Set environment variables for maintenance script
  cron:
    env: true
    name: PATH
    value: /usr/bin:/bin:/usr/sbin:/sbin

- include_role:
    name: geerlingguy.apache
  when: '"logserver" in sevices and not "zuul" in services'
