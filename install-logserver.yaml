---
- hosts: localhost
  become: true
  vars:
    logs_documentroot: "/srv/static/logs"
    apache_vhosts:
      - servername: "3ci-log.ciscolabs.net"
        serveralias: ".*"
        documentroot: "{{ logs_documentroot }}"
        extra_parameters: |
          WSGIDaemonProcess logs user=www-data group=www-data processes=8 threads=1
          WSGIProcessGroup logs
          WSGIApplicationGroup %{GLOBAL}
          WSGIScriptAlias /htmlify /usr/local/lib/python2.7/dist-packages/os_loganalyze/wsgi.py

          AddType text/plain .log
          AddType text/plain .sh
          AddType text/plain .yaml
          AddType text/plain .yml

          AddOutputFilterByType DEFLATE text/plain text/html application/x-font-ttf image/svg+xml

          <Directory /usr/local/lib/python2.7/dist-packages/os_loganalyze>
            Allow from all
            Satisfy Any
          </Directory>

          <Directory {{ logs_documentroot }}/periodic*/*>
             IndexOrderDefault Descending Date
          </Directory>

          RewriteEngine On

          RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-f
          RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME}.gz -f
          RewriteRule ^/(.*)$ %{REQUEST_URI}.gz

          RewriteRule ^/(.*\.(txt|log)\.gz)$ /htmlify/$1 [QSA,L,PT,NS]
          RewriteRule ^/(.*console\.html(\.gz)?)$ /htmlify/$1 [QSA,L,PT,NS]

          RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-f
          RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-d
          RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-l
          RewriteCond %{REQUEST_FILENAME} !^/icon
          RewriteRule ^/(.*)$ /htmlify/$1 [QSA,L,PT,NS]

          <FilesMatch \.html\.gz$>
            ForceType text/html
            AddDefaultCharset UTF-8
            AddEncoding x-gzip gz
          </FilesMatch>
          <FilesMatch \.css\.gz$>
            ForceType text/css
            AddDefaultCharset UTF-8
            AddEncoding x-gzip gz
          </FilesMatch>
          <FilesMatch \.js\.gz$>
            ForceType text/javascript
            AddDefaultCharset UTF-8
            AddEncoding x-gzip gz
          </FilesMatch>
          <FilesMatch \.ttf\.gz$>
            ForceType application/x-font-ttf
            AddEncoding x-gzip gz
          </FilesMatch>
          <FilesMatch \.svg\.gz$>
            ForceType image/svg+xml
            AddEncoding x-gzip gz
          </FilesMatch>
          <FilesMatch \.json\.gz$>
            ForceType application/json
            AddEncoding x-gzip gz
          </FilesMatch>
          <FilesMatch \.css$>
            # mod_mime_magic is sometimes passing css files as asm sources
            # e.g css files generated by coverage reports
            ForceType text/css
          </FilesMatch>

          ErrorLog /var/log/apache2/openstack_logs_error.log
          LogLevel warn
          CustomLog /var/log/apache2/openstack_logs_access.log combined
          ServerSignature Off
    apache_mods_enabled:
      - rewrite.load
      - proxy.load
      - proxy_http.load
      - wsgi.load
    apache_remove_default_vhost: true
    apache_options: |
      +Indexes
    apache_vhosts_filename: "99-ci-logs.conf"
  tasks:
    - name: Install apache2 mod wsgi package
      package:
        name: libapache2-mod-wsgi

    - name: Install apache2 mod wsgi package for py3
      package:
        name: libapache2-mod-wsgi-py3
      when: "'python3' in hostvars['ansible_python_interpreter']"

    - name: Ensure location for logs exists
      file:
        path: '/srv/static'
        state: directory

    - name: Ensure location for logs exists
      file:
        path: '/srv/static/logs'
        state: directory

    - name: Setup robots.txt
      copy:
        dest: /srv/static/logs/robots.txt
        content: |
          User-agent: *
          Disallow: /

    - name: Install packages required for keyring
      package:
        name: "{{ item }}"
      with_items:
        - build-essential
        - python-dev
        - libdbus-1-dev
        - libdbus-glib-1-dev
        - libffi-dev
        - libssl-dev

    - name: Install keyring
      pip:
        name: keyring

    - name: Download os-loganalyze
      git:
        repo: https://git.openstack.org/openstack-infra/os-loganalyze
        dest: /opt/os-loganalyze

    - name: Install os-loganalyze
      pip:
        name: file:///opt/os-loganalyze

    - name: Create os-loganalyze config dir
      file:
        path: /etc/os_loganalyze
        state: directory

    - name: Create WSGI config for loganalyze
      copy:
        dest: /etc/os_loganalyze/wsgi.conf
        content: |
          [general]
          filter = SevFilter
          view = HTMLView
          file_conditions = /etc/os_loganalyze/file_conditions.yaml
          generate_folder_index = true

    - name: Create loganalyze file conditions file
      copy:
        dest: /etc/os_loganalyze/file_conditions.yaml
        content: |
          conditions:
           - filename_pattern: ^.*\.txt(\.gz)?$
             filter: SevFilter
             view: HTMLView
           - filename_pattern: ^.*\.log(\.gz)?$
             filter: SevFilter
             view: HTMLView
           - filename_pattern: ^.*console\.html(\.gz)?$
             filter: SevFilter
             view: HTMLView
           - filename_pattern: ^.*$
             filter: NoFilter
             view: PassthroughView

    - name: Upload log maintenance script
      copy:
        dest: /usr/local/sbin/log_archive_maintenance.sh
        content: |
          #!/bin/sh
          sleep $((RANDOM%600)) && \
          flock -n /var/run/gziplogs.lock \
          find -O3 /srv/static/logs/ -depth -not -name robots.txt -not -name lost+found \
                  -not -wholename /srv/static/logs/help/\* \( \
              \( -type f -mmin +10 -not -name \*\[.-\]gz -not -name \*\[._-\]\[zZ\] \
                  \( -name \*.txt -or -name \*.html -or -name tmp\* \) \
                  -exec gzip \{\} \; \) \
              -o \( -type f -mtime +30 -execdir rm \{\} \; \) \
              -o \( -type d -empty -mtime +1 -execdir rmdir {} \; \) \)

    - name: Setup cron task for maintenance script 
      cron:
        name: gziprmlogs
        minute: 0
        hour: 7
        weekday: 6
        job: bash /usr/local/sbin/log_archive_maintenance.sh

    - name: Set environment variables for maintenance script
      cron:
        env: true
        name: PATH
        value: /usr/bin:/bin:/usr/sbin:/sbin

    - include_role:
        name: geerlingguy.apache
      when: not (all_in_one_zuul_node | default(false))

    - include_role:
        name: geerlingguy.apache
      vars:
        apache_listen_port: 8090
        apache_global_vhost_settings: |
          Listen 8090
        apache_options: "+Indexes"
        logs_documentroot: "/srv/static/"
        apache_vhosts:
          - servername: "3ci-log.ciscolabs.net"
            documentroot: "{{ logs_documentroot }}"
            serveralias: ".*"
            extra_parameters: |
              WSGIDaemonProcess logs user=www-data group=www-data processes=8 threads=1
              WSGIProcessGroup logs
              WSGIApplicationGroup %{GLOBAL}
              WSGIScriptAlias /htmlify /usr/local/lib/python2.7/dist-packages/os_loganalyze/wsgi.py

              AddType text/plain .log
              AddType text/plain .sh
              AddType text/plain .yaml
              AddType text/plain .yml

              AddOutputFilterByType DEFLATE text/plain text/html application/x-font-ttf image/svg+xml

              <Directory /usr/local/lib/python2.7/dist-packages/os_loganalyze>
                Allow from all
                Satisfy Any
              </Directory>

              <Directory {{ logs_documentroot }}/periodic*/*>
                 IndexOrderDefault Descending Date
              </Directory>

              RewriteEngine On

              RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-f
              RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME}.gz -f
              RewriteRule ^/(.*)$ %{REQUEST_URI}.gz

              RewriteRule ^/logs/(.*\.(txt|log)\.gz)$ /htmlify/$1 [QSA,L,PT,NS]
              RewriteRule ^/logs/(.*console\.html(\.gz)?)$ /htmlify/$1 [QSA,L,PT,NS]

              RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-f
              RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-d
              RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-l
              RewriteCond %{REQUEST_FILENAME} !^/icon
              RewriteRule ^/logs/(.*)$ /htmlify/$1 [QSA,L,PT,NS]

              <FilesMatch \.html\.gz$>
                ForceType text/html
                AddDefaultCharset UTF-8
                AddEncoding x-gzip gz
              </FilesMatch>
              <FilesMatch \.css\.gz$>
                ForceType text/css
                AddDefaultCharset UTF-8
                AddEncoding x-gzip gz
              </FilesMatch>
              <FilesMatch \.js\.gz$>
                ForceType text/javascript
                AddDefaultCharset UTF-8
                AddEncoding x-gzip gz
              </FilesMatch>
              <FilesMatch \.ttf\.gz$>
                ForceType application/x-font-ttf
                AddEncoding x-gzip gz
              </FilesMatch>
              <FilesMatch \.svg\.gz$>
                ForceType image/svg+xml
                AddEncoding x-gzip gz
              </FilesMatch>
              <FilesMatch \.json\.gz$>
                ForceType application/json
                AddEncoding x-gzip gz
              </FilesMatch>
              <FilesMatch \.css$>
                # mod_mime_magic is sometimes passing css files as asm sources
                # e.g css files generated by coverage reports
                ForceType text/css
              </FilesMatch>

              ErrorLog /var/log/apache2/openstack_logs_error.log
              LogLevel warn
              CustomLog /var/log/apache2/openstack_logs_access.log combined
              ServerSignature Off
      when: all_in_one_zuul_node | default(false)

    - include_role:
        name: geerlingguy.apache
      vars:
        apache_listen_port: 80
        apache_vhosts_filename: "50-ci-main.conf"
        apache_vhosts:
          - servername: "3ci-log.ciscolabs.net"
            serveralias: ".*"
            extra_parameters: |
              RewriteEngine on
              Redirect "/logs" "/logs/"
              RewriteRule "^/logs/(.*)$" "http://localhost:8090/logs/$1" [P]
              ProxyPassReverse "/logs/" "http://localhost:8090/logs/"

              RewriteRule ^/api/connection/(.*)$ http://localhost:9000/api/connection/$1 [P]
              RewriteRule ^/api/console-stream ws://localhost:9000/api/tenant/openstack/console-stream [P]
              RewriteRule ^/api/(.*)$ http://localhost:9000/api/tenant/openstack/$1 [P]

              RewriteCond %{REQUEST_FILENAME} !^/icon
              RewriteRule ^/(.*)$ http://localhost:9000/$1 [P]
      when: all_in_one_zuul_node | default(false)
